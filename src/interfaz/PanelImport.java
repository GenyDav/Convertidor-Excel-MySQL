/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import conexion.Conexion;
import datos.ElementoLista;
import datos.InfoColumna;
import excel.LectorExcel;
import formatoTablas.FormatoTablaExcel;
import java.awt.event.ItemEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Geny
 * @version 1.0
 */
public class PanelImport extends javax.swing.JPanel {
    private JFrame ventana;
    private JPanel panel;
    private ArrayList<TablaLista> listaHojas;
    private LectorExcel lector;
    private Conexion conn;  
    private FormatoTablaExcel formatoExcel;
    private DefaultListModel modeloListaExcel;
    private GeneradorBD genBD;
    private String nomArch;
    private String rutaArch;
    private String expNombre = "(_+|[a-zA-Z]+|(\\d*[a-zA-Z]+))(\\w*)"; // verificar que se introduce un nombre válido para la BD
    private Pattern patron = Pattern.compile(expNombre);
    private Matcher mat;
    private Reporte rep;
    
    /**
     * Creates new form PanelImport
     */
    public PanelImport(JFrame frame, JPanel panel, Conexion conn) {
        initComponents();
        ventana = frame;
        this.panel = panel;
        this.conn = conn;
        listaHojas = new ArrayList<>();
        lector = null;
        formatoExcel = null;
        modeloListaExcel = new DefaultListModel();
        jListHojas.setModel(modeloListaExcel);
        genBD = new GeneradorBD();
        nomArch = "";
        rutaArch = "";
        rep = new Reporte(ventana,true); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelImport = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaExcel = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        comboHojas = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPaneSel1 = new javax.swing.JScrollPane();
        jListHojas = new javax.swing.JList();
        btnQuitar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        opcHojasSel = new javax.swing.JRadioButton();
        opcHojasCompletas = new javax.swing.JRadioButton();
        btnImportar = new javax.swing.JButton();
        barraProgreso = new javax.swing.JProgressBar();
        infoImport = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        btnAgregarHoja = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        labelRegExcel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        btnAbrir = new javax.swing.JButton();
        btnTipos = new javax.swing.JButton();
        labelArchivo = new javax.swing.JLabel();
        btnReporte = new javax.swing.JButton();

        panelImport.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane2.setToolTipText("");

        tablaExcel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaExcel.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tablaExcel.setGridColor(new java.awt.Color(204, 204, 204));
        tablaExcel.setSelectionBackground(new java.awt.Color(2, 97, 140));
        tablaExcel.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tablaExcel);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Archivo seleccionado");

        comboHojas.setEnabled(false);
        comboHojas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboHojasItemStateChanged(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setText("Hojas");

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPaneSel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPaneSel1.setEnabled(false);

        jListHojas.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jListHojas.setEnabled(false);
        jListHojas.setName(""); // NOI18N
        jListHojas.setSelectionBackground(new java.awt.Color(2, 97, 140));
        jListHojas.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPaneSel1.setViewportView(jListHojas);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPaneSel1)
                .addGap(0, 0, 0))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneSel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
        );

        btnQuitar.setText("Quitar hoja(s)");
        btnQuitar.setEnabled(false);
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar todo");
        btnBorrar.setEnabled(false);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        opcHojasSel.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(opcHojasSel);
        opcHojasSel.setText("Importar sólo las hojas seleccionadas");
        opcHojasSel.setEnabled(false);
        opcHojasSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcHojasSelActionPerformed(evt);
            }
        });

        opcHojasCompletas.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(opcHojasCompletas);
        opcHojasCompletas.setSelected(true);
        opcHojasCompletas.setText("Importar todas las hojas del archivo");
        opcHojasCompletas.setEnabled(false);
        opcHojasCompletas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcHojasCompletasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnQuitar, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(opcHojasCompletas)
                            .addComponent(opcHojasSel))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(opcHojasCompletas)
                .addGap(0, 0, 0)
                .addComponent(opcHojasSel)
                .addGap(0, 0, 0)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQuitar)
                    .addComponent(btnBorrar))
                .addGap(0, 0, 0))
        );

        btnImportar.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        btnImportar.setText("Crear base de datos");
        btnImportar.setEnabled(false);
        btnImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarActionPerformed(evt);
            }
        });

        barraProgreso.setToolTipText("");
        barraProgreso.setFocusable(false);
        barraProgreso.setStringPainted(true);

        infoImport.setBackground(new java.awt.Color(255, 255, 255));
        infoImport.setText("Progreso de importación");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setText("Crear base de datos a partir de archivo Excel");

        btnAgregarHoja.setText("Seleccionar hoja");
        btnAgregarHoja.setEnabled(false);
        btnAgregarHoja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarHojaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addComponent(btnAgregarHoja)
                .addContainerGap(243, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAgregarHoja)
        );

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        jLabel12.setText("Opciones de importación");

        labelRegExcel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelRegExcel.setText("Seleccione un archivo");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(labelRegExcel, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(labelRegExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnAbrir.setText("Abrir archivo");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        btnTipos.setText("Cambiar tipos");
        btnTipos.setEnabled(false);
        btnTipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTiposActionPerformed(evt);
            }
        });

        labelArchivo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelArchivo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        btnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/reporte.png"))); // NOI18N
        btnReporte.setToolTipText("Reporte de importación");
        btnReporte.setEnabled(false);
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelImportLayout = new javax.swing.GroupLayout(panelImport);
        panelImport.setLayout(panelImportLayout);
        panelImportLayout.setHorizontalGroup(
            panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImportLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelImportLayout.createSequentialGroup()
                        .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelImportLayout.createSequentialGroup()
                                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(0, 0, 0)
                                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImportLayout.createSequentialGroup()
                                .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(10, 10, 10)
                                .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboHojas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(6, 6, 6)
                                .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnTipos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAbrir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane2))
                        .addGap(27, 27, 27)
                        .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12)
                            .addComponent(btnImportar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelImportLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(infoImport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImportLayout.createSequentialGroup()
                        .addComponent(barraProgreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        panelImportLayout.setVerticalGroup(
            panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImportLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(6, 6, 6)
                .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelImportLayout.createSequentialGroup()
                        .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(labelArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImportLayout.createSequentialGroup()
                                .addComponent(btnTipos)
                                .addGap(9, 9, 9))
                            .addGroup(panelImportLayout.createSequentialGroup()
                                .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(panelImportLayout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(comboHojas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImportar)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(infoImport, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(panelImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(barraProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReporte))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 937, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 585, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboHojasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboHojasItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            if(opcHojasSel.isSelected()){
                if(listaHojas.get(comboHojas.getSelectedIndex()).estaSeleccionado()){
                    btnTipos.setEnabled(true);
                    btnAgregarHoja.setEnabled(false);
                }else{
                    btnTipos.setEnabled(false);
                    btnAgregarHoja.setEnabled(true);
                }
            }
            formatoExcel = new FormatoTablaExcel(comboHojas.getSelectedIndex(),lector,tablaExcel);
            formatoExcel.execute();
        }
    }//GEN-LAST:event_comboHojasItemStateChanged

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        InterfazGrafica.borrarElemento(jListHojas,modeloListaExcel,listaHojas);
        //mostrarListaElementos(listaHojas);
        if(!listaHojas.get(comboHojas.getSelectedIndex()).estaSeleccionado()){
            btnTipos.setEnabled(false);
            btnAgregarHoja.setEnabled(true);
        }
        if(modeloListaExcel.isEmpty()){
            btnQuitar.setEnabled(false);
            btnBorrar.setEnabled(false);
            btnImportar.setEnabled(false);
        }
    }//GEN-LAST:event_btnQuitarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        if(InterfazGrafica.limpiarSeleccion(panel,"hojas",modeloListaExcel,listaHojas)==JOptionPane.OK_OPTION){
            btnTipos.setEnabled(false);
            btnAgregarHoja.setEnabled(true);
            btnImportar.setEnabled(false);
            btnBorrar.setEnabled(false);
            btnQuitar.setEnabled(false);
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void opcHojasSelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcHojasSelActionPerformed
        jListHojas.setEnabled(true);
        jScrollPaneSel1.getVerticalScrollBar().setEnabled(true);
        // Revisar si la tabla que se está mostrando está agregada a la lista de importación
        if(listaHojas.get(comboHojas.getSelectedIndex()).estaSeleccionado()){
            btnTipos.setEnabled(true);
            btnAgregarHoja.setEnabled(false);
        }else{
            btnTipos.setEnabled(false);
            btnAgregarHoja.setEnabled(true);
        }
        // Habilitar los botones según el contenido del jList
        if(!modeloListaExcel.isEmpty()){
            btnQuitar.setEnabled(true);
            btnBorrar.setEnabled(true);
            btnImportar.setEnabled(true);
        }else{
            btnImportar.setEnabled(false);
        }
    }//GEN-LAST:event_opcHojasSelActionPerformed

    private void opcHojasCompletasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcHojasCompletasActionPerformed
        btnQuitar.setEnabled(false);
        btnBorrar.setEnabled(false);
        btnAgregarHoja.setEnabled(false);
        jListHojas.setEnabled(false);
        jScrollPaneSel1.getVerticalScrollBar().setEnabled(false);
        btnTipos.setEnabled(true);
        btnImportar.setEnabled(true);
    }//GEN-LAST:event_opcHojasCompletasActionPerformed

    private void btnImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarActionPerformed
        if(btnImportar.getText().equals("Cancelar importación")){
            genBD.cancel(true);
        }else{
            String nombreBase = "";
            try{
                nombreBase = (String)JOptionPane.showInputDialog(
                    this,
                    "Escribe el nombre de la nueva base de datos:\n",
                    "Crear base de datos",
                    JOptionPane.PLAIN_MESSAGE,
                    null,           // ícono
                    null,           // opciones del combo box
                    "Nombre nuevo"  // texto dentro del campo
                );
                //System.out.println("Nombre de la base de datos: "+nombreBase);
                if(nombreBase.length()>0){ // comprobar que el usuario escriba algo
                    mat = patron.matcher(nombreBase);
                    if(mat.matches()){
                        // crear la base de datos
                        importarArchivo(nombreBase);
                    }else{
                        throw new Exception();
                    }
                }else{
                    throw new Exception();
                }
            }catch(NullPointerException e){
            }
            catch(Exception e){
                //e.printStackTrace();
                JOptionPane.showMessageDialog(
                    this,
                    "No se encontró un nombre válido. El nombre sólo "
                    + "\npuede estar formado por letras, números y "
                    + "\ncaracteres de subrayado(_).",
                    "No se puede crear la base de datos",
                    JOptionPane.WARNING_MESSAGE
                );
            }
        }
    }//GEN-LAST:event_btnImportarActionPerformed

    public void importarArchivo(String nombre){
        List<TablaLista> listaHojasImportar;
        btnReporte.setEnabled(true);
        if(opcHojasCompletas.isSelected()){
            listaHojasImportar = listaHojas; 
        }else{
            listaHojasImportar = listaHojas.stream()
                .filter(elemento->elemento.estaSeleccionado())
                .collect(Collectors.toList());
        }
        try{
            genBD =  new GeneradorBD(conn,lector,nombre,listaHojasImportar,infoImport,btnImportar,barraProgreso,rep.getTextArea());
            genBD.execute();           
        }catch(Exception e){
            e.printStackTrace();
        }
    }  
    
    private void btnAgregarHojaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarHojaActionPerformed
        modeloListaExcel.addElement(new ElementoLista(comboHojas.getSelectedItem().toString(),comboHojas.getSelectedIndex()));
        jListHojas.setSelectedIndex(modeloListaExcel.getSize()-1);
        listaHojas.get(comboHojas.getSelectedIndex()).setSeleccionado(true);
        //mostrarListaElementos(listaHojas);
        btnQuitar.setEnabled(true);
        btnBorrar.setEnabled(true);
        btnTipos.setEnabled(true);
        btnAgregarHoja.setEnabled(false);
        btnImportar.setEnabled(true);
    }//GEN-LAST:event_btnAgregarHojaActionPerformed

    /**
     * Método que permite cargar un nuevo archivo de Excel al presionar el botón
     * correspondiente.
     * @param evt Evento lanzado al hacer clic sobre el botón que permite abrir
     * un archivo nuevo.
     */
    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        int selUsuario = -1 ;
        SelectorApertura sa = new SelectorApertura();
        // Revisar si hay tablas seleccionadas en la lista de importación
        // Si la lista está vacía, la ventana para seleccionar el archivo nuevo
        // se muestra inmediatamente.
        if(modeloListaExcel.isEmpty())
            selUsuario = sa.showOpenDialog(panel);
        // Si la lista no está vacía, se muestra un cuadro de diálogo donde se
        // le solicita al usuario la confirmación para eliminar las tablas de la
        // lista antes de abrir el nuevo archivo.
        if(!modeloListaExcel.isEmpty()&&InterfazGrafica.limpiarSeleccion(panel,"hojas",modeloListaExcel,listaHojas)==JOptionPane.OK_OPTION){
            btnBorrar.setEnabled(false);
            btnQuitar.setEnabled(false);
            if(opcHojasSel.isSelected()){
                btnImportar.setEnabled(false);
                btnAgregarHoja.setEnabled(true);
                btnTipos.setEnabled(false);
            }
            selUsuario = sa.showOpenDialog(panel);
        }
        // Si el usuario selecciona un archivo y presiona el botón 'Aceptar' se
        // comprueba que el tamaño del archivo sea mayor a cero. Si no lo es, se
        // muestra un mensaje informando el error. Si el tamaño es mayor a cero,
        // se procede a cargar el archivo.
        if(selUsuario == JFileChooser.APPROVE_OPTION){
            try{
                nomArch = sa.getSelectedFile().getName();
                rutaArch = sa.getSelectedFile().getPath();
                File archivo = new File(rutaArch);
                if(archivo.length()==0){
                    reiniciarElementosImportacion();
                    JOptionPane.showMessageDialog(
                        this, nomArch+"\nEl archivo no tiene información.  ",
                        "No se puede leer el archivo", JOptionPane.WARNING_MESSAGE
                    );
                }else{
                    limpiarPantallaImportacion();
                    //lector = new LectorExcel(ventana,comboHojas,labelRegExcel,labelArchivo,btnAbrir,rutaArch,nomArch,btnTipos,listaHojas,btnImportar,opcHojasCompletas,opcHojasSel);
                    lector = new LectorExcel(ventana, this);
                    lector.execute();
                }
            }catch(Exception ex){
                // ex.printStackTrace();
                infoImport.setText(ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnAbrirActionPerformed

    public ArrayList<TablaLista> getListaHojas() {
        return listaHojas;
    }

    public JButton getBtnImportar() {
        return btnImportar;
    }

    public JRadioButton getOpcHojasCompletas() {
        return opcHojasCompletas;
    }

    public JRadioButton getOpcHojasSel() {
        return opcHojasSel;
    }

    public String getNomArch() {
        return nomArch;
    }

    public String getRutaArch() {
        return rutaArch;
    }

    public JButton getBtnAbrir() {
        return btnAbrir;
    }

    public JButton getBtnTipos() {
        return btnTipos;
    }

    public JComboBox getComboHojas() {
        return comboHojas;
    }

    public JLabel getLabelArchivo() {
        return labelArchivo;
    }

    public JLabel getLabelRegExcel() {
        return labelRegExcel;
    }

    private void limpiarPantallaImportacion(){
        labelArchivo.setText("");
        tablaExcel.setModel(new DefaultTableModel());
        comboHojas.removeAllItems();
        comboHojas.setEnabled(false);
        btnAbrir.setEnabled(false);
        btnTipos.setEnabled(false);
        btnAgregarHoja.setEnabled(false);
        btnImportar.setEnabled(false);
        opcHojasCompletas.setSelected(true);
        opcHojasCompletas.setEnabled(false);
        opcHojasSel.setEnabled(false);
        infoImport.setText("Progreso de importación");
        barraProgreso.setValue(0);
        btnReporte.setEnabled(false);    
        listaHojas.clear();
        if(lector!=null && lector.getLibro()!=null){
            lector.cerrarArchivo();
        }                  
        //rep.getTextArea().setText("");
    }
    
    private void reiniciarElementosImportacion(){                                                   
        labelArchivo.setText("");
        comboHojas.removeAllItems(); //
        comboHojas.setEnabled(false);//
        btnTipos.setEnabled(false);//
        opcHojasCompletas.setSelected(true);//
        opcHojasCompletas.setEnabled(false);//
        opcHojasSel.setEnabled(false);//
        modeloListaExcel.clear();
        tablaExcel.setModel(new DefaultTableModel());// 
        btnAgregarHoja.setEnabled(false);//
        //labelSelTablaExcel.setText("");
        labelRegExcel.setText("Seleccione un archivo");
        btnBorrar.setEnabled(false);
        btnQuitar.setEnabled(false);
        btnImportar.setEnabled(false);//
        barraProgreso.setValue(0);
        btnReporte.setEnabled(false);
        
        nomArch = "";
        rutaArch = "";
        listaHojas.clear();//
        //rep.getTextArea().setText("");
        if(lector!=null && lector.getLibro()!=null){
            lector.cerrarArchivo();
            lector = null;
        }  
        infoImport.setText("Progreso de importación");
    }
    
    private void btnTiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTiposActionPerformed
        TablaLista tabla;
        /*System.out.println("Información - número de hojas: " +listaHojas.size());
        for(int i=0;i<listaHojas.size();i++){
            tabla = listaHojas.get(i);
            tabla.mostrarColumnas();
            System.out.println();
        }*/
        String nomTabla = listaHojas.get(comboHojas.getSelectedIndex()).getNombre();
        ArrayList<InfoColumna> columnas = listaHojas.get(comboHojas.getSelectedIndex()).obtenerColumnas();
        new ConfiguracionTipos(ventana,true,nomTabla,columnas).setVisible(true);
    }//GEN-LAST:event_btnTiposActionPerformed

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        rep.setVisible(true);
    }//GEN-LAST:event_btnReporteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barraProgreso;
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnAgregarHoja;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnImportar;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JButton btnReporte;
    private javax.swing.JButton btnTipos;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox comboHojas;
    private javax.swing.JLabel infoImport;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jListHojas;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPaneSel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel labelArchivo;
    private javax.swing.JLabel labelRegExcel;
    private javax.swing.JRadioButton opcHojasCompletas;
    private javax.swing.JRadioButton opcHojasSel;
    private javax.swing.JPanel panelImport;
    private javax.swing.JTable tablaExcel;
    // End of variables declaration//GEN-END:variables
}
